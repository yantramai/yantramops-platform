{
  "version": 4,
  "terraform_version": "0.12.18",
  "serial": 2,
  "lineage": "979a0fae-c6d6-e5a0-eba2-f00e233bba68",
  "outputs": {},
  "resources": [
    {
      "module": "module.gcp",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "default_firewall",
      "each": "map",
      "provider": "provider.google",
      "instances": []
    },
    {
      "module": "module.gcp",
      "mode": "managed",
      "type": "google_compute_instance",
      "name": "default_instance",
      "each": "map",
      "provider": "provider.google",
      "instances": []
    },
    {
      "module": "module.grafana-dashboard",
      "mode": "managed",
      "type": "grafana_dashboard",
      "name": "metrics",
      "each": "map",
      "provider": "provider.grafana",
      "instances": []
    },
    {
      "module": "module.grafana_data_source",
      "mode": "managed",
      "type": "grafana_data_source",
      "name": "yantram-grafana_data_source",
      "each": "map",
      "provider": "provider.grafana",
      "instances": []
    },
    {
      "module": "module.helm_chart",
      "mode": "managed",
      "type": "helm_release",
      "name": "yantram-helm_release-stack",
      "each": "map",
      "provider": "provider.helm",
      "instances": [
        {
          "index_key": "awx",
          "schema_version": 0,
          "attributes": {
            "atomic": false,
            "chart": "awx",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "yantram-awx",
            "keyring": null,
            "lint": false,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "9.3.0",
                "chart": "awx",
                "name": "yantram-awx",
                "namespace": "yantram",
                "revision": 1,
                "values": "{\"default_admin_password\":\"password\",\"default_admin_user\":\"admin\",\"extraConfiguration\":\"# INSIGHTS_URL_BASE = \\\"https://example.org\\\"\",\"fullnameOverride\":\"\",\"ingress\":{\"annotations\":{},\"defaultBackend\":true,\"enabled\":false,\"hosts\":[],\"tls\":[]},\"memcached\":{\"enabled\":true},\"nameOverride\":\"\",\"postgresql\":{\"enabled\":true,\"image\":{\"registry\":\"docker.io\",\"repository\":\"bitnami/postgresql\",\"tag\":9.6},\"metrics\":{\"enabled\":false},\"persistence\":{\"enabled\":true},\"postgresqlDatabase\":\"awx\",\"postgresqlPassword\":\"pgpassword\",\"postgresqlUsername\":\"awx\"},\"rabbitmq\":{\"enabled\":true,\"rabbitmq\":{\"extraConfiguration\":\"default_vhost = awx\",\"password\":\"amqpassword\",\"username\":\"admin\"}},\"secret_key\":\"awxsecret\",\"service\":{\"port\":8080,\"type\":\"ClusterIP\"},\"task\":{\"affinity\":{},\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"ansible/awx_task\",\"tag\":\"9.3.0\"},\"nodeSelector\":{},\"replicaCount\":1,\"resources\":{},\"tolerations\":[]},\"web\":{\"affinity\":{},\"extraVolumeMounts\":[],\"extraVolumes\":[],\"image\":{\"pullPolicy\":\"IfNotPresent\",\"repository\":\"ansible/awx_web\",\"tag\":\"9.3.0\"},\"nodeSelector\":{},\"replicaCount\":1,\"resources\":{},\"tolerations\":[]}}",
                "version": "2.3.1"
              }
            ],
            "name": "yantram-awx",
            "namespace": "yantram",
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://adwerx.github.io/charts",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "values": [
              "# @TODO\n# 12.0 remove memcached: https://github.com/ansible/awx/pull/7240\n# 10.0 remove rabbitmq https://github.com/ansible/awx/issues/5443\n# Default values for awx\n# This is a YAML-formatted file.\n# Declare variables to be passed into your templates.\n\nnameOverride: \"\"\nfullnameOverride: \"\"\n\nweb:\n  image:\n    repository: ansible/awx_web\n    tag: \"9.3.0\"\n    pullPolicy: IfNotPresent\n  replicaCount: 1\n  resources: {}\n    # We usually recommend not to specify default resources and to leave this as a conscious\n    # choice for the user. This also increases chances charts run on environments with little\n    # resources, such as Minikube. If you do want to specify resources, uncomment the following\n    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n    # limits:\n    #  cpu: \"1\"\n    #  memory: \"1Gi\"\n    # requests:\n    #  cpu: \"1\"\n    #  memory: \"1Gi\"\n  extraVolumes: []\n  extraVolumeMounts: []\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n\ntask:\n  image:\n    repository: ansible/awx_task\n    tag: \"9.3.0\"\n    pullPolicy: IfNotPresent\n  replicaCount: 1\n  resources: {}\n    # We usually recommend not to specify default resources and to leave this as a conscious\n    # choice for the user. This also increases chances charts run on environments with little\n    # resources, such as Minikube. If you do want to specify resources, uncomment the following\n    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.\n    # limits:\n    #  cpu: \"1.5\"\n    #  memory: \"2Gi\"\n    # requests:\n    #  cpu: \"1.5\"\n    #  memory: \"2Gi\"\n  nodeSelector: {}\n  tolerations: []\n  affinity: {}\n\nsecret_key: awxsecret\ndefault_admin_user: admin\ndefault_admin_password: password\n\nextraConfiguration: |-\n  # INSIGHTS_URL_BASE = \"https://example.org\"\n\nservice:\n  type: ClusterIP\n  port: 8080\n\ningress:\n  enabled: false\n  # whether the default backend for this ingress should route to the awx service\n  defaultBackend: true\n  # Used to create an Ingress record.\n  hosts: []\n    # - host: chart-example.local\n    #   paths:\n    #     - \"/\"\n  annotations: {}\n    # kubernetes.io/ingress.class: nginx\n    # kubernetes.io/tls-acme: \"true\"\n  tls: []\n    # Secrets must be manually created in the namespace.\n    # - secretName: chart-example-tls\n    #   hosts:\n    #     - chart-example.local\n\n# Chart values https://github.com/helm/charts/blob/master/stable/memcached/values.yaml\nmemcached:\n  enabled: true\n\n# Chart values https://github.com/helm/charts/blob/master/stable/rabbitmq/values.yaml\nrabbitmq:\n  enabled: true\n  rabbitmq:\n    username: admin\n    password: amqpassword\n    # loadDefinition:\n    #   enabled: true\n    #   secretName: rabbitmq-load-definition\n    ## Configution file content https://www.rabbitmq.com/configure.html#configuration-files\n    extraConfiguration: |-\n      default_vhost = awx\n\n# Chart values https://github.com/helm/charts/blob/master/stable/postgresql/values.yaml\npostgresql:\n  enabled: true\n  image:\n    registry: docker.io\n    repository: bitnami/postgresql\n    tag: 9.6\n  postgresqlUsername: awx\n  postgresqlPassword: pgpassword\n  postgresqlDatabase: awx\n  # Uncomment to use a different host for postgresql instance\n  # postgresqlHost:\n  persistence:\n    enabled: true\n    # size: 50Gi\n  # resources: {}\n  metrics:\n    enabled: false\n\n"
            ],
            "verify": false,
            "version": "2.3.1",
            "wait": true
          },
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
